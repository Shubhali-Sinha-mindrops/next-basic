{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\biggerProject-next\\\\pages\\\\[meetupId]\\\\index.js\";\n//import { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First Meetup\",\n    address: \"Junica 56, Florida\",\n    description: \"This is the first Meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/biggerProject-next/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails"],"mappings":";;AAAA;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,wHADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,oBAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQA,a;;AAgDT,eAAeA,aAAf","sourcesContent":["//import { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nfunction MeetupDetails() {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n      title=\"First Meetup\"\r\n      address=\"Junica 56, Florida\"\r\n      description=\"This is the first Meetup\"\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  //When it is used on dynamic pages, it tells NextJS that for which id's page will be re-generated.\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://ShubhaliSinha:*123Sinha@cluster0.lc8qw.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray(); //only fetching all({} means all and _id: 1 means only id in an array)\r\n  return {\r\n    fallback: false, //It allows us to pre-generate some of our pages with some pre-defined id(mmetupId).\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n} //this method is needed only when we are using getStatisProps method on a dynamic page.\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  console.log(meetupId);\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image:\r\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n        id: meetupId,\r\n        title: \"First Meetup\",\r\n        address: \"Junica 56, Florida\",\r\n        description: \"This is the first Meetup\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}