{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\biggerProject-next\\\\pages\\\\index.js\";\n//import { useEffect, useState } from 'react';\nimport MeetupList from '../components/meetups/MeetupList';\nvar DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'First meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'LakeView 5, Washington DC',\n  description: 'This is a first meetup'\n}, {\n  id: 'm2',\n  title: 'Second meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'H-no. 514, Florida',\n  description: 'This is a second meetup'\n}];\n\nfunction HomePage(props) {\n  // const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {               //here, this useEffect run after the execution of component function. It means that loadedMeetups is empty at first time and then the state changed. \n  //     setLoadedMeetups(DUMMY_MEETUPS);\n  // }, []);\n  //return <MeetupList meetups={loadedMeetups} />\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n}\n\n_c = HomePage;\n; // export async function getServerSideProps(context) {        //This code will always run on the server.\n//     //fetch data from an API\n//     //this async function gurantees to run for every request.But in this we have to wait until page regenerated fior every request.\n//     const req = context.req;\n//     const res = context.res;\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         } \n//     };\n// };      //this function will not run during the build process, but instead always on the server after deployment.\n\n;\nexport var __N_SSG = true;\nexport default HomePage; //npm run build is a command need to run before deploy nextjs sites.\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["D:/biggerProject-next/pages/index.js"],"names":["MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups"],"mappings":";;AAAA;AACA,OAAOA,UAAP,MAAuB,kCAAvB;AAGA,IAAMC,aAAa,GAAG,CAClB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,cAFX;AAGIC,EAAAA,KAAK,EAAE,wHAHX;AAIIC,EAAAA,OAAO,EAAE,2BAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADkB,EAQlB;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,eAFX;AAGIC,EAAAA,KAAK,EAAE,wHAHX;AAIIC,EAAAA,OAAO,EAAE,oBAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARkB,CAAtB;;AAiBA,SAAUC,QAAV,CAAmBC,KAAnB,EAA0B;AACtB;AAEA;AACA;AACA;AACA;AAEA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KATSF,Q;AAST,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AA4BC;;AAID,eAAeA,QAAf,C,CAGA","sourcesContent":["//import { useEffect, useState } from 'react';\r\nimport MeetupList from '../components/meetups/MeetupList';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nconst DUMMY_MEETUPS = [\r\n    {\r\n        id: 'm1',\r\n        title: 'First meetup',\r\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n        address: 'LakeView 5, Washington DC',\r\n        description: 'This is a first meetup'\r\n    },\r\n    {\r\n        id: 'm2',\r\n        title: 'Second meetup',\r\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n        address: 'H-no. 514, Florida',\r\n        description: 'This is a second meetup'\r\n    }\r\n];\r\n\r\nfunction  HomePage(props) {\r\n    // const [loadedMeetups, setLoadedMeetups] = useState([]);\r\n\r\n    // useEffect(() => {               //here, this useEffect run after the execution of component function. It means that loadedMeetups is empty at first time and then the state changed. \r\n    //     setLoadedMeetups(DUMMY_MEETUPS);\r\n    // }, []);\r\n    //return <MeetupList meetups={loadedMeetups} />\r\n\r\n    return <MeetupList meetups={props.meetups} />\r\n};\r\n\r\n// export async function getServerSideProps(context) {        //This code will always run on the server.\r\n//     //fetch data from an API\r\n//     //this async function gurantees to run for every request.But in this we have to wait until page regenerated fior every request.\r\n//     const req = context.req;\r\n//     const res = context.res;\r\n\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEETUPS\r\n//         } \r\n//     };\r\n// };      //this function will not run during the build process, but instead always on the server after deployment.\r\n\r\nexport async function getStaticProps() {        //this method return a promise since it is async and it will exceute first before the component function to load the data and send it to the component function through props.\r\n    //fetch data from an API/ database\r\n      //It make the page to run faster than serversideprops function just above and an alternate for this method.\r\n\r\n      const client = await MongoClient.connect(\r\n        'mongodb+srv://ShubhaliSinha:*123Sinha@cluster0.lc8qw.mongodb.net/meetups?retryWrites=true&w=majority'\r\n      );\r\n      const db = client.db();\r\n  \r\n      const meetupsCollection = db.collection('meetups');\r\n\r\n      const meetups = await meetupsCollection.find().toArray();\r\n\r\n      client.close();\r\n\r\n    return {            //data fetch for pre-Rendering and it will always return an object with a props key.\r\n        props: {\r\n            meetups: meetups.map(meetup => ({\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                id: meetup._id.toString()       //this will convert this value in a meaningful string which can be used later.\r\n            }))\r\n        },\r\n        revalidate: 1                  //it is in seconds....to save the site from old data.This page will re-generated after the time mentioned after the deploy of the site.\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default HomePage;\r\n\r\n\r\n//npm run build is a command need to run before deploy nextjs sites."]},"metadata":{},"sourceType":"module"}